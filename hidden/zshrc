# Uncomment this and last line for startup profiling
# zmodload zsh/zprof

# Compile zsh files if updated
find -L ~/.zsh -type f -not -name "*.zwc" -print0 | while IFS= read -r -d '' file; do
  if [[ -f "${file}.zwc" && "${file}.zwc" -nt "$file" ]]; then
    continue
  fi
  zcompile "$file"
done

find -L $HOME \( -name "*.zsh" -o -name ".zshrc" \) -type f -maxdepth 1 -print0 | while IFS= read -r -d '' file; do
  if [[ -f "${file}.zwc" && "${file}.zwc" -nt "$file" ]]; then
    continue
  fi
  zcompile "$file"
done

# Compile zsh plugins if updated
if [[ ! -f ${ZDOTDIR:-~}/.zsh_plugins.sh || ${ZDOTDIR:-~}/.zsh/zsh_plugins.txt -nt ${ZDOTDIR:-~}/.zsh_plugins.sh  ]]; then
      zcompile ${ZDOTDIR:-~}/.zsh_plugins.sh
      antidote bundle < ~/.zsh/zsh_plugins.txt > ${ZDOTDIR:-~}/.zsh_plugins.sh
fi

builtin source ~/.zsh/options.zsh

# Path to your oh-my-zsh installation.

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="robbyrussell"
# ZSH_THEME=powerlevel10k/powerlevel10k
# ZSH_THEME="bira"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  # git
  # themes
  # colored-man-pages colorize
  # pip pipenv python pep8
  # npm
  # docker docker-compose
  # vscode
  # aws
  # kubectl kube-ps1
  # fzf
  # zsh-autosuggestions
  # zsh-syntax-highlighting
)

# https://htr3n.github.io/2018/07/faster-zsh/
autoload -Uz compinit bashcompinit
compinit -d
bashcompinit -d

# https://github.com/zsh-users/zsh-completions/issues/680
ZSH_DISABLE_COMPFIX=true
compaudit | xargs chmod g-w

# Enable FZF completion
autoload -Uz fzf-completion
FZF_COMPLETION_TRIGGER=space
FZF_COMPLETION_OPTS="--prompt='(fzf)'"

case `uname` in
  Darwin)
    # commands for OS X go here
    source /usr/local/opt/antidote/share/antidote/antidote.zsh
  ;;
  Linux)
    # commands for Linux go here
    source ${ZDOTDIR:-~}/.antidote/antidote.zsh
  ;;
  FreeBSD)
    # commands for FreeBSD go here
  ;;
esac

# https://callstack.com/blog/supercharge-your-terminal-with-zsh/
# setopt auto_cd # cd by typing directory name if it's not a command
# setopt correct_all # autocorrect commands
# setopt auto_list # automatically list choices on ambiguous completion
# setopt auto_menu # automatically use menu completion
# setopt always_to_end # move cursor to end if word had one match

# zstyle ':completion:*' menu select # select completions with arrow keys
# zstyle ':completion:*' group-name '' # group results by category
# zstyle ':completion:::::' completer _expand _complete _ignored _approximate # enable approximate matches for completion

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# zprof = (anon) ~ 100ms
[[ ! -f ~/.p10k.zsh ]] || builtin source ~/.p10k.zsh
builtin source ~/.zsh/p10k.zsh

builtin source ~/.zsh_plugins.sh
#source <(antidote init)

# Execute code in the background to not affect the current session
{
  # if [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
  #  compinit
  # else
  #  compinit -C
  # fi

  # https://medium.com/@dannysmith/little-thing-2-speeding-up-zsh-f1860390f92
  # for dump in ~/.zcompdump(N.mh+24); do
  #  compinit
  # done
  # compinit -C

  # typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
  # if [ $(date +'%j') != $updated_at ]; then
  #   compinit -i off
  # else
  #   compinit -C -i off
  # fi
  # zmodload -i zsh/complist

  # Compile zcompdump, if modified, to increase startup speed.
  zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
  if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
    zcompile "$zcompdump"
  fi
} &!

# PROMPT=${PROMPT}'$(kube_ps1) '
# PROMPT='$FG[237]${(l:$COLUMNS::=:):-}%{$reset_color%}'

# bira theme promp
# PROMPT="╭─ ${user_host}"'$(kube_ps1)'" ${current_dir}${rvm_ruby}${git_branch}${venv_prompt}
# ╰─%B ${user_symbol}%b "
# RPROMPT="%B${return_code}%b"

# User configuration
builtin source ~/.zsh/vars.zsh
builtin source ~/.zsh/alias.zsh

[ -f ~/.env.zsh ] && builtin source ~/.env.zsh
[ -f ~/.dev.zsh ] && builtin source ~/.dev.zsh
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# {
#  eval $(ssh-agent); chmod 600 $HOME/.ssh/*{.pem,_rsa}; ssh-add ~/.ssh/*{.pem,_rsa};
# } &!

#bindkey '^[[A' history-substring-search-up
#bindkey '^[[B' history-substring-search-down
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
#bindkey -M vicmd 'k' history-substring-search-up
#bindkey -M vicmd 'j' history-substring-search-down
#bindkey '^[[3~' delete-char
#bindkey '^[3;5~' delete-char

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# Init profiling
# time zsh -i -c exit
# zprof
